{
	"info": {
		"_postman_id": "6554e4f3-3f56-4fb5-ba87-4d0a8396e367",
		"name": "Gestion Restaurantes y Platos",
		"description": "Gestión de restaurantes y platos",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_exporter_id": "43573414"
	},
	"item": [
		{
			"name": "restaurants",
			"item": [
				{
					"name": "Crear un restaurante",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"var data = pm.response.json()",
									"pm.globals.set(\"restaurant_id\", data.id);",
									"",
									"pm.test(\"Status code is 201\", function () {",
									"    pm.response.to.have.status(201);",
									"});"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"name\": \"El Cielo\",\n  \"address\": \"Calle 70 #4-47\",\n  \"page\": \"www.elcielorestaurant.com\",\n  \"cuisineType\": \"Colombian\"\n}\n",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseURL}}/restaurants",
							"host": [
								"{{baseURL}}"
							],
							"path": [
								"restaurants"
							]
						}
					},
					"response": []
				},
				{
					"name": "Crear un restaurante con tipo de cocina inválido",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 400\", function () {",
									"   pm.response.to.have.status(400);",
									"});",
									"",
									"pm.test(\"Get expected error message\", function () {",
									"    const data = pm.response.json();",
									"    pm.expect(data.message[0]).to.eql(\"cuisineType must be one of the following values: Italian, Colombian, Mexican, Japanese, Indian, International\");",
									"});"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"name\": \"El Cielo\",\n  \"address\": \"Calle 70 #4-47\",\n  \"page\": \"www.elcielorestaurant.com\",\n  \"cuisineType\": \"French\"\n}\n",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseURL}}/restaurants",
							"host": [
								"{{baseURL}}"
							],
							"path": [
								"restaurants"
							]
						}
					},
					"response": []
				},
				{
					"name": "Obtener restaurantes",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"   pm.response.to.have.status(200);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseURL}}/restaurants",
							"host": [
								"{{baseURL}}"
							],
							"path": [
								"restaurants"
							]
						}
					},
					"response": []
				},
				{
					"name": "Obtener un restaurante por ID",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"   pm.response.to.have.status(200);",
									"});"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseURL}}/restaurants/{{restaurant_id}}",
							"host": [
								"{{baseURL}}"
							],
							"path": [
								"restaurants",
								"{{restaurant_id}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Obtener un restaurante por un ID que no existe",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 404\", function () {",
									"   pm.response.to.have.status(404);",
									"});",
									"",
									"pm.test(\"Get expected error message\", function () {",
									"   var data = pm.response.json();",
									"   pm.expect(data.message).to.eql(\"El restaurante con el id suministrado no fue encontrado\");",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseURL}}/restaurants/00000000-0000-0000-0000-000000000000",
							"host": [
								"{{baseURL}}"
							],
							"path": [
								"restaurants",
								"00000000-0000-0000-0000-000000000000"
							]
						}
					},
					"response": []
				},
				{
					"name": "Actualizar un restaurante",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"   pm.response.to.have.status(200);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "PUT",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"name\": \"El Cielo Restaurante\",\n  \"address\": \"Calle 70 #4-47\",\n  \"page\": \"www.elcielorestaurant.com\",\n  \"cuisineType\": \"Colombian\"\n}\n",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseURL}}/restaurants/{{restaurant_id}}",
							"host": [
								"{{baseURL}}"
							],
							"path": [
								"restaurants",
								"{{restaurant_id}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Actualizar un restaurante con un ID que no existe",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 404\", function () {",
									"   pm.response.to.have.status(404);",
									"});",
									"",
									"pm.test(\"Get expected error message\", function () {",
									"   var data = pm.response.json();",
									"   pm.expect(data.message).to.eql(\"El restaurante con el id suministrado no fue encontrado\");",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "PUT",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"name\": \"El Cielo Restaurante\",\n  \"address\": \"Calle 70 #4-47\",\n  \"page\": \"www.elcielorestaurant.com\",\n  \"cuisineType\": \"Colombian\"\n}\n",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseURL}}/restaurants/00000000-0000-0000-0000-000000000000",
							"host": [
								"{{baseURL}}"
							],
							"path": [
								"restaurants",
								"00000000-0000-0000-0000-000000000000"
							]
						}
					},
					"response": []
				},
				{
					"name": "Eliminar un restaurante por ID",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 204\", function () {",
									"   pm.response.to.have.status(204);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "{{baseURL}}/restaurants/{{restaurant_id}}",
							"host": [
								"{{baseURL}}"
							],
							"path": [
								"restaurants",
								"{{restaurant_id}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Eliminar un restaurante con un ID que no existe",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 404\", function () {",
									"   pm.response.to.have.status(404);",
									"});",
									"",
									"pm.test(\"Get expected error message\", function () {",
									"   var data = pm.response.json();",
									"   pm.expect(data.message).to.eql(\"El restaurante con el id suministrado no fue encontrado\");",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "{{baseURL}}/restaurants/00000000-0000-0000-0000-000000000000",
							"host": [
								"{{baseURL}}"
							],
							"path": [
								"restaurants",
								"00000000-0000-0000-0000-000000000000"
							]
						}
					},
					"response": [
						{
							"name": "404 Not Found - Eliminar un restaurante inválido",
							"originalRequest": {
								"method": "DELETE",
								"header": [],
								"url": {
									"raw": "{{baseURL}}/restaurants/00000000-0000-0000-0000-000000000000",
									"host": [
										"{{baseURL}}"
									],
									"path": [
										"restaurants",
										"00000000-0000-0000-0000-000000000000"
									]
								}
							},
							"status": "Not Found",
							"code": 404,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json",
									"description": "",
									"type": "text"
								}
							],
							"cookie": [],
							"body": "{\n    \"statusCode\": 404,\n    \"message\": \"El restaurante con el id suministrado no fue encontrado\"\n}"
						}
					]
				}
			]
		},
		{
			"name": "dishes",
			"item": [
				{
					"name": "Crear un plato",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"var data = pm.response.json()",
									"pm.globals.set(\"dish_id\", data.id);",
									"",
									"pm.test(\"Status code is 201\", function () {",
									"    pm.response.to.have.status(201);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"name\": \"Ajiaco\",\n  \"description\": \"Sopa típica colombiana\",\n  \"price\": 25000,\n  \"dishCategory\": \"main\"\n}\n",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseURL}}/dishes",
							"host": [
								"{{baseURL}}"
							],
							"path": [
								"dishes"
							]
						}
					},
					"response": []
				},
				{
					"name": "Crear un plato con categoría inválida",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 400\", function () {",
									"   pm.response.to.have.status(400);",
									"});",
									"",
									"pm.test(\"Get expected error message\", function () {",
									"   var data = pm.response.json();",
									"   pm.expect(data.message[0]).to.eql(\"dishCategory must be one of the following values: appetizer, main, dessert, drink\");",
									"});"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"name\": \"Ajiaco\",\n  \"description\": \"Sopa típica colombiana\",\n  \"price\": 25000,\n  \"dishCategory\": \"side\"\n}\n",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseURL}}/dishes",
							"host": [
								"{{baseURL}}"
							],
							"path": [
								"dishes"
							]
						}
					},
					"response": []
				},
				{
					"name": "Obtener platos",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"   pm.response.to.have.status(200);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseURL}}/dishes",
							"host": [
								"{{baseURL}}"
							],
							"path": [
								"dishes"
							]
						}
					},
					"response": []
				},
				{
					"name": "Obtener un plato por ID",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"   pm.response.to.have.status(200);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseURL}}/dishes/{{dish_id}}",
							"host": [
								"{{baseURL}}"
							],
							"path": [
								"dishes",
								"{{dish_id}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Obtener un plato por un ID que no existe",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 404\", function () {",
									"   pm.response.to.have.status(404);",
									"});",
									"",
									"pm.test(\"Get expected error message\", function () {",
									"   var data = pm.response.json();",
									"   pm.expect(data.message).to.eql(\"El plato con el id suministrado no fue encontrado\");",
									"});"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseURL}}/dishes/00000000-0000-0000-0000-000000000000",
							"host": [
								"{{baseURL}}"
							],
							"path": [
								"dishes",
								"00000000-0000-0000-0000-000000000000"
							]
						}
					},
					"response": []
				},
				{
					"name": "Actualizar un plato",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"   pm.response.to.have.status(200);",
									"});"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "PUT",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"name\": \"Ajiaco Santafereño\",\n  \"description\": \"Sopa típica colombiana con pollo, papas y maíz\",\n  \"price\": 28000,\n  \"dishCategory\": \"main\"\n}\n",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseURL}}/dishes/{{dish_id}}",
							"host": [
								"{{baseURL}}"
							],
							"path": [
								"dishes",
								"{{dish_id}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Actualizar un plato por un ID que no existe",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 404\", function () {",
									"   pm.response.to.have.status(404);",
									"});",
									"",
									"pm.test(\"Get expected error message\", function () {",
									"   var data = pm.response.json();",
									"   pm.expect(data.message).to.eql(\"El plato con el id suministrado no fue encontrado\");",
									"});"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "PUT",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"name\": \"Ajiaco Santafereño\",\n  \"description\": \"Sopa típica colombiana con pollo, papas y maíz\",\n  \"price\": 28000,\n  \"dishCategory\": \"main\"\n}\n",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseURL}}/dishes/00000000-0000-0000-0000-000000000000",
							"host": [
								"{{baseURL}}"
							],
							"path": [
								"dishes",
								"00000000-0000-0000-0000-000000000000"
							]
						}
					},
					"response": []
				},
				{
					"name": "Eliminar un plato por ID",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 204\", function () {",
									"   pm.response.to.have.status(204);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "{{baseURL}}/dishes/{{dish_id}}",
							"host": [
								"{{baseURL}}"
							],
							"path": [
								"dishes",
								"{{dish_id}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Eliminar un plato por ID que no existe",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 404\", function () {",
									"   pm.response.to.have.status(404);",
									"});",
									"",
									"pm.test(\"Get expected error message\", function () {",
									"   var data = pm.response.json();",
									"   pm.expect(data.message).to.eql(\"El plato con el id suministrado no fue encontrado\");",
									"});"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "{{baseURL}}/dishes/00000000-0000-0000-0000-000000000000",
							"host": [
								"{{baseURL}}"
							],
							"path": [
								"dishes",
								"00000000-0000-0000-0000-000000000000"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "restaurant-dish",
			"item": [
				{
					"name": "Asociar un plato a un restaurante",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 201\", function () {",
									"   pm.response.to.have.status(201);",
									"});"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"url": {
							"raw": "{{baseURL}}/restaurants/{{restaurant_id}}/dishes/{{dish_id}}",
							"host": [
								"{{baseURL}}"
							],
							"path": [
								"restaurants",
								"{{restaurant_id}}",
								"dishes",
								"{{dish_id}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Asociar un plato que no existe a un restaurante",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 404\", function () {",
									"   pm.response.to.have.status(404);",
									"});",
									"",
									"pm.test(\"Get expected error message\", function () {",
									"   var data = pm.response.json();",
									"   pm.expect(data.message).to.eql(\"El plato con el id suministrado no ha sido encontrado\");",
									"});"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"url": {
							"raw": "{{baseURL}}/restaurants/{{restaurant_id}}/dishes/00000000-0000-0000-0000-000000000000",
							"host": [
								"{{baseURL}}"
							],
							"path": [
								"restaurants",
								"{{restaurant_id}}",
								"dishes",
								"00000000-0000-0000-0000-000000000000"
							]
						}
					},
					"response": [
						{
							"name": "200 OK - Asociar un plato a un restaurante",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"url": {
									"raw": "{{baseURL}}/restaurants/{{restaurant_id_assoc}}/dishes/{{dish_id_assoc}}",
									"host": [
										"{{baseURL}}"
									],
									"path": [
										"restaurants",
										"{{restaurant_id_assoc}}",
										"dishes",
										"{{dish_id_assoc}}"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json",
									"description": "",
									"type": "text"
								}
							],
							"cookie": [],
							"body": "{\n    \"id\": \"c5d3c1b7-6e4f-5g2h-8i9j-7k6l5m4n3o2p\",\n    \"name\": \"Andrés Carne de Res\",\n    \"address\": \"Calle 82 #12-21\",\n    \"page\": \"www.andrescarnederes.com\",\n    \"cuisineType\": \"Colombian\",\n    \"dishes\": [\n        {\n            \"id\": \"d5d3c1b7-6e4f-5g2h-8i9j-7k6l5m4n3o2p\",\n            \"name\": \"Bandeja Paisa\",\n            \"description\": \"Plato típico colombiano con frijoles, arroz, carne, chicharrón, huevo y plátano\",\n            \"price\": 35000,\n            \"dishCategory\": \"main\"\n        }\n    ]\n}"
						}
					]
				},
				{
					"name": "Obtener todos los platos de un restaurante",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"   pm.response.to.have.status(200);",
									"});"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseURL}}/restaurants/{{restaurant_id}}/dishes",
							"host": [
								"{{baseURL}}"
							],
							"path": [
								"restaurants",
								"{{restaurant_id}}",
								"dishes"
							]
						}
					},
					"response": []
				},
				{
					"name": "Obtener un plato asociado a un restaurante",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"   pm.response.to.have.status(200);",
									"});"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseURL}}/restaurants/{{restaurant_id}}/dishes/{{dish_id}}",
							"host": [
								"{{baseURL}}"
							],
							"path": [
								"restaurants",
								"{{restaurant_id}}",
								"dishes",
								"{{dish_id}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Obtener un plato que no esté asociado a un restaurante",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 404\", function () {",
									"   pm.response.to.have.status(404);",
									"});",
									"",
									"pm.test(\"Get expected error message\", function () {",
									"   var data = pm.response.json();",
									"   pm.expect(data.message).to.eql(\"El plato con el id suministrado no ha sido encontrado\");",
									"});"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseURL}}/restaurants/{{restaurant_id}}/dishes/00000000-0000-0000-0000-000000000000",
							"host": [
								"{{baseURL}}"
							],
							"path": [
								"restaurants",
								"{{restaurant_id}}",
								"dishes",
								"00000000-0000-0000-0000-000000000000"
							]
						}
					},
					"response": []
				},
				{
					"name": "Actualizar los platos que están asociados a un restaurante",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"   pm.response.to.have.status(200);",
									"});"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "PUT",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "[\n    {\n        \"id\": \"{{dish_id}}\",\n        \"name\": \"Bandeja Paisa\",\n        \"description\": \"Plato típico colombiano\",\n        \"price\": 35000,\n        \"dishCategory\": \"main\"\n    }\n]",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseURL}}/restaurants/{{restaurant_id}}/dishes",
							"host": [
								"{{baseURL}}"
							],
							"path": [
								"restaurants",
								"{{restaurant_id}}",
								"dishes"
							]
						}
					},
					"response": []
				},
				{
					"name": "Actualizar los platos asociados a un restaurante con un plato inexistente",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 404\", function () {",
									"   pm.response.to.have.status(404);",
									"});",
									"",
									"",
									"pm.test(\"Get expected error message\", function () {",
									"   var data = pm.response.json();",
									"   pm.expect(data.message).to.eql(\"El plato con el id suministrado no ha sido encontrado\");",
									"});"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "PUT",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "[\n    {\n        \"id\": \"00000000-0000-0000-0000-000000000000\",\n        \"name\": \"Bandeja Paisa\",\n        \"description\": \"Plato típico colombiano\",\n        \"price\": 35000,\n        \"dishCategory\": \"main\"\n    }\n]",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseURL}}/restaurants/{{restaurant_id}}/dishes",
							"host": [
								"{{baseURL}}"
							],
							"path": [
								"restaurants",
								"{{restaurant_id}}",
								"dishes"
							]
						}
					},
					"response": []
				},
				{
					"name": "Eliminar un plato previamente asociado a un restaurante",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 204\", function () {",
									"   pm.response.to.have.status(204);",
									"});"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "{{baseURL}}/restaurants/{{restaurant_id}}/dishes/{{dish_id}}",
							"host": [
								"{{baseURL}}"
							],
							"path": [
								"restaurants",
								"{{restaurant_id}}",
								"dishes",
								"{{dish_id}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Eliminar un plato que no estaba previamente asociado a un restaurante.",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 404\", function () {",
									"   pm.response.to.have.status(404);",
									"});",
									"",
									"pm.test(\"Get expected error message\", function () {",
									"   var data = pm.response.json();",
									"   pm.expect(data.message).to.eql(\"El plato con el id suministrado no ha sido encontrado\");",
									"});"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "{{baseURL}}/restaurants/{{restaurant_id}}/dishes/00000000-0000-0000-0000-000000000000",
							"host": [
								"{{baseURL}}"
							],
							"path": [
								"restaurants",
								"{{restaurant_id}}",
								"dishes",
								"00000000-0000-0000-0000-000000000000"
							]
						}
					},
					"response": []
				}
			]
		}
	],
	"event": [
		{
			"listen": "prerequest",
			"script": {
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		},
		{
			"listen": "test",
			"script": {
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		}
	],
	"variable": [
		{
			"key": "baseURL",
			"value": "http://localhost:4100/api/v1",
			"type": "string"
		}
	]
}